rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function userRole() {
      return isAuthenticated() && request.auth.token.role is string
        ? request.auth.token.role
        : 'employe';
    }

    function isManager() {
      return userRole() in ['admin', 'patron', 'manager'];
    }

    function canRead() {
      return isAuthenticated();
    }

    function canWrite() {
      return isAuthenticated();
    }

    function canDelete() {
      return isManager();
    }

    /* Utilisateurs de l'UI (menus déroulants, affectations) */
    match /users/{userId} {
      allow read: if canRead();
      allow create, update: if isManager();
      allow delete: if false;
    }

    /* Référentiel clients utilisé pendant la vente */
    match /clients/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Trésorerie (solde global + comptes + mouvements) */
    match /tresorerie/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Snapshots quotidiens de trésorerie */
    match /tresorerieSnapshots/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Snapshots d'ouverture de stock */
    match /stockSnapshots/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Ventes (documents + sous-collections paiements) */
    match /ventes/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Clotures journalières par vendeur */
    match /cloturesVendeurs/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Dépenses fonctionnelles */
    match /depenses/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Dépenses Papa / remboursements */
    match /depensePapa/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    match /remboursements/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Dettes consignation (articles en dépôt) */
    match /dettesConsignation/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Apports Papa : saisie réservée encadrement */
    match /apportPapa/{document=**} {
      allow read: if canRead();
      allow create, update, delete: if isManager();
    }

    /* Gestion stock + historique + IMEIs */
    match /stock/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Approvisionnements + sous-collections (paiements, réceptions) */
    match /approvisionnement/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Référentiel fournisseurs */
    match /fournisseurs/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Référentiel vendeurs (utilisé par scripts) */
    match /vendeurs/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Référentiel livreurs */
    match /livreurs/{document=**} {
      allow read: if canRead();
      allow create, update: if canWrite();
      allow delete: if canDelete();
    }

    /* Toute autre collection reste bloquée par défaut */
  }
}
